/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import java.util.Arrays;
import javax.swing.DefaultListModel;
import javax.swing.JButton;

/**
 *
 * @author preston
 */
public class DialogPane extends javax.swing.JPanel {

    /**
     * Creates new form dialogPane
     */
    public DialogPane(DefaultListModel active, DefaultListModel inactive) {
        initComponents();
        this.active = active;
        this.inactive = inactive;
        refreshLists();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inactiveList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        activeList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        toActive = new javax.swing.JButton();
        toInactive = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        jScrollPane1.setViewportView(inactiveList);

        jScrollPane2.setViewportView(activeList);

        jLabel1.setText("Nieaktywne");

        jLabel2.setText("Aktywne");

        toActive.setText(">>");
        toActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toActiveActionPerformed(evt);
            }
        });

        toInactive.setText("<<");
        toInactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toInactiveActionPerformed(evt);
            }
        });

        okButton.setText("Ok");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toActive)
                            .addComponent(toInactive))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(toActive)
                        .addGap(67, 67, 67)
                        .addComponent(toInactive)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void toActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toActiveActionPerformed
        int[] toActiveIndices = reverse(inactiveList.getSelectedIndices());
        for (int i : toActiveIndices) {
            active.addElement(inactive.getElementAt(i));
            inactive.removeElementAt(i);
        }
        refreshLists();
    }//GEN-LAST:event_toActiveActionPerformed

    private void toInactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toInactiveActionPerformed
        int[] toInactiveIndices = reverse(activeList.getSelectedIndices());
        for (int i : toInactiveIndices) {
            inactive.addElement(active.getElementAt(i));
            active.removeElementAt(i);
        }
        refreshLists();
    }//GEN-LAST:event_toInactiveActionPerformed

    private int[] reverse(int[] array) {
        for (int i = 0; i < array.length / 2; i++) {
            int tmp = array[i];
            array[i] = array[array.length-i-1];
            array[array.length-i-1] = tmp;
        }
        return array;
    }
    
    private void refreshLists() {
        activeList.setModel(active);
        inactiveList.setModel(inactive);
    }
    
    public JButton getOkButton() {
        return okButton;
    }
    
    private DefaultListModel active;
    private DefaultListModel inactive;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList activeList;
    private javax.swing.JList inactiveList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton okButton;
    private javax.swing.JButton toActive;
    private javax.swing.JButton toInactive;
    // End of variables declaration//GEN-END:variables
}
